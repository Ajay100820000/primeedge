<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>PrimeEdge Info Tech Solutions</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    body {
      background: linear-gradient(135deg, #e0f7fa, #e1bee7);
    }
    header {
      background: linear-gradient(to right, #0288d1, #7b1fa2);
    }
    footer {
      background-color: #ede7f6;
    }
    .tab-btn {
      transition: all 0.3s;
    }
    .tab-btn:hover {
      transform: scale(1.05);
    }
    [contenteditable]:focus {
      outline: 2px dashed #9c27b0;
      background-color: #f3e5f5;
    }
    textarea.command-box {
      background-color: #ede7f6;
      padding: 0.75rem;
      border-radius: 0.5rem;
      width: 100%;
      resize: vertical;
      min-height: 3em;
      border: 1px solid #ce93d8;
    }
    input[type="file"] {
      display: none;
    }
  </style>
</head>
<body class="bg-gradient-to-br from-purple-100 to-blue-100 font-sans min-h-screen">

<section id="mainApp">
  <header class="text-white p-4 text-xl font-bold flex justify-between shadow-md">
    <div>🧠 PrimeEdge Info Tech Solutions</div>
    <div class="flex gap-2 items-center text-sm">
      <span>Logged in as: <span id="loggedInRole" class="font-semibold">User</span></span>
      <button onclick="toggleAdminUser()" class="bg-indigo-500 text-white px-3 py-1 rounded hover:bg-indigo-600 text-sm">
        🔁 Switch Role
      </button>
      <label class="cursor-pointer hidden" id="uploadLabel">
        <input type="file" id="imgUpload" accept="image/*" onchange="handleImageUpload()" />
        <span class="bg-yellow-500 text-white px-3 py-1 rounded hover:bg-yellow-600">📤 Upload Image</span>
      </label>
    </div>
  </header>

  <div class="max-w-6xl mx-auto p-6">
    <div class="flex flex-wrap gap-4 mb-6">
      <button onclick="showTab('motherboard', event)" class="tab-btn bg-purple-500 text-white px-4 py-2 rounded shadow">Motherboard</button>
      <button onclick="showTab('harddisk', event)" class="tab-btn bg-blue-500 text-white px-4 py-2 rounded shadow">Hard Disk</button>
    </div>

    <div class="mb-4 flex flex-wrap gap-4 hidden" id="addButtons">
      <button onclick="addNewItem('motherboard')" class="bg-green-500 text-white px-4 py-2 rounded shadow hover:bg-green-600">➕ Add Motherboard Tip</button>
      <button onclick="addNewItem('harddisk')" class="bg-green-500 text-white px-4 py-2 rounded shadow hover:bg-green-600">➕ Add Disk Tip</button>
    </div>

    <div class="mb-6">
      <button onclick="togglePhotos()" id="togglePhotosBtn" class="bg-pink-500 text-white px-4 py-2 rounded shadow hover:bg-pink-600">🖼️ Enable Photos</button>
    </div>    

    <div id="motherboard" class="tab-content space-y-4"></div>
    <div id="harddisk" class="tab-content hidden space-y-4"></div>
  </div>

  <footer class="text-center p-4 text-sm text-gray-700">© 2025 PrimeEdge — All rights reserved.</footer>
</section>

<script>
let currentRole = "user";
const adminPassword = "admin123";
let photosEnabled = false;
let selectedIndexForImage = null;

let content = JSON.parse(localStorage.getItem("primeEdgeData")) || {
  motherboard: [
    { title: "Motherboard Tip #1", desc: "Check motherboard model using dmidecode.", cmd: "sudo dmidecode -t baseboard", img: "" },
    { title: "Motherboard Tip #2", desc: "Use lshw for hardware info.", cmd: "sudo lshw -class motherboard", img: "" },
    { title: "Motherboard Tip #3", desc: "Verify BIOS version.", cmd: "sudo dmidecode -s bios-version", img: "" }
  ],
  harddisk: [
    { title: "Hard Disk Tip #1", desc: "List partitions.", cmd: "sudo fdisk -l" },
    { title: "Hard Disk Tip #2", desc: "Disk usage stats.", cmd: "df -h" },
    { title: "Hard Disk Tip #3", desc: "Check disk health.", cmd: "sudo smartctl -a /dev/sda" }
  ]
};
localStorage.setItem("primeEdgeData", JSON.stringify(content));

function toggleAdminUser() {
  if (currentRole === "admin") {
    currentRole = "user";
    document.getElementById("loggedInRole").innerText = "User";
    document.getElementById("addButtons").classList.add("hidden");
    document.getElementById("uploadLabel").classList.add("hidden");
    renderAllTabs();
  } else {
    const input = prompt("Enter admin password:");
    if (input === adminPassword) {
      currentRole = "admin";
      document.getElementById("loggedInRole").innerText = "Admin";
      document.getElementById("addButtons").classList.remove("hidden");
      document.getElementById("uploadLabel").classList.remove("hidden");
      renderAllTabs();
    } else {
      alert("❌ Incorrect password.");
    }
  }
}

function renderAllTabs() {
  renderTab("motherboard");
  renderTab("harddisk");
}

function renderTab(tabId) {
  const container = document.getElementById(tabId);
  container.innerHTML = "";
  content[tabId].forEach((item, i) => {
    container.innerHTML += `
      <div class="bg-white border rounded-lg p-5 mb-4 relative shadow-md">
        <h2 id="${tabId}-title-${i}" contenteditable="${currentRole === 'admin'}" 
            onblur="saveContent('${tabId}', ${i})"
            class="text-xl font-bold mb-2 text-purple-800">${item.title}</h2>

        <p id="${tabId}-desc-${i}" contenteditable="${currentRole === 'admin'}" 
           onblur="saveContent('${tabId}', ${i})"
           class="mb-4 text-gray-700">${item.desc}</p>

        ${tabId === 'motherboard' && item.img && photosEnabled 
          ? `<img src="${item.img}" class="mb-4 w-full max-w-md rounded shadow" />` : ''}

        <textarea id="${tabId}-cmd-${i}" class="command-box" ${currentRole !== 'admin' ? 'readonly' : ''} 
                  onblur="saveContent('${tabId}', ${i})">${item.cmd}</textarea>

        ${tabId === 'motherboard' && currentRole === 'admin' ? `
        <div class="mt-3 flex gap-3 flex-wrap">
          <button onclick="prepareUpload(${i})" class="bg-yellow-500 text-white px-3 py-1 text-sm rounded hover:bg-yellow-600">📤 Upload Image</button>
          ${item.img ? `<button onclick="removeImage(${i})" class="bg-red-500 text-white px-3 py-1 text-sm rounded hover:bg-red-600">🗑️ Remove Image</button>` : ''}
        </div>` : ''}

        <div class="mt-4 flex flex-wrap justify-between items-center">
          <div>
            <button onclick="copyText('${tabId}-cmd-${i}', '${tabId}-msg-${i}')" class="bg-purple-200 text-sm px-3 py-1 rounded hover:bg-purple-300 transition">📋 Copy</button>
            <p id="${tabId}-msg-${i}" class="text-green-500 text-sm mt-1 hidden">✅ Copied!</p>
          </div>
          ${currentRole === 'admin' ? `
          <div class="flex gap-2">
            <button onclick="saveContent('${tabId}', ${i})" class="bg-green-600 text-white px-3 py-1 text-sm rounded hover:bg-green-700">💾 Save</button>
            <button onclick="deleteItem('${tabId}', ${i})" class="bg-red-600 text-white px-3 py-1 text-sm rounded hover:bg-red-700">🗑 Delete</button>
          </div>` : ''}
        </div>
      </div>`;
  });
}

function saveContent(tab, i) {
  if (currentRole !== 'admin') return;
  content[tab][i].title = document.getElementById(`${tab}-title-${i}`).innerText.trim();
  content[tab][i].desc = document.getElementById(`${tab}-desc-${i}`).innerText.trim();
  content[tab][i].cmd = document.getElementById(`${tab}-cmd-${i}`).value.trim();
  localStorage.setItem("primeEdgeData", JSON.stringify(content));
}

function deleteItem(tabId, index) {
  if (currentRole !== 'admin') return;
  if (!confirm("Are you sure you want to delete this tip?")) return;
  content[tabId].splice(index, 1);
  localStorage.setItem("primeEdgeData", JSON.stringify(content));
  renderTab(tabId);
}

function addNewItem(tabId) {
  if (currentRole !== 'admin') return;
  const newIndex = content[tabId].length;
  content[tabId].push({
    title: `New ${tabId} Tip #${newIndex + 1}`,
    desc: "Enter description here.",
    cmd: "# New command",
    img: ""
  });
  localStorage.setItem("primeEdgeData", JSON.stringify(content));
  renderTab(tabId);
}

function prepareUpload(index) {
  selectedIndexForImage = index;
  document.getElementById("imgUpload").click();
}

function handleImageUpload() {
  const file = document.getElementById("imgUpload").files[0];
  if (!file || selectedIndexForImage === null) return;
  const reader = new FileReader();
  reader.onload = () => {
    content.motherboard[selectedIndexForImage].img = reader.result;
    localStorage.setItem("primeEdgeData", JSON.stringify(content));
    renderTab("motherboard");
    selectedIndexForImage = null;
  };
  reader.readAsDataURL(file);
}

function removeImage(index) {
  if (currentRole !== 'admin') return;
  content.motherboard[index].img = "";
  localStorage.setItem("primeEdgeData", JSON.stringify(content));
  renderTab("motherboard");
}

function togglePhotos() {
  photosEnabled = !photosEnabled;
  document.getElementById("togglePhotosBtn").innerText = photosEnabled ? "🖼️ Disable Photos" : "🖼️ Enable Photos";
  renderTab("motherboard");
}

function showTab(tabId, event) {
  document.querySelectorAll(".tab-content").forEach(tab => tab.classList.add("hidden"));
  document.getElementById(tabId).classList.remove("hidden");
  document.querySelectorAll(".tab-btn").forEach(btn => btn.classList.remove("bg-sky-500", "text-white"));
  event.target.classList.add("bg-sky-500", "text-white");
}

function copyText(codeId, msgId) {
  const text = document.getElementById(codeId).value;
  navigator.clipboard.writeText(text).then(() => {
    const msg = document.getElementById(msgId);
    msg.classList.remove("hidden");
    setTimeout(() => msg.classList.add("hidden"), 1500);
  });
}

// Load default tab
renderAllTabs();
</script>
</body>
</html>
